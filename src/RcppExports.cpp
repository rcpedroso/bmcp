// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <RcppArmadillo.h>
#include <Rcpp.h>

using namespace Rcpp;

#ifdef RCPP_USE_GLOBAL_ROSTREAM
Rcpp::Rostream<true>&  Rcpp::Rcout = Rcpp::Rcpp_cout_get();
Rcpp::Rostream<false>& Rcpp::Rcerr = Rcpp::Rcpp_cerr_get();
#endif

// bmcp
Rcpp::List bmcp(int burn, int ns, arma::rowvec X, double alpha1, double beta1, double alpha2, double beta2, double a, double d, double mu0, double s02);
RcppExport SEXP _bmcp_bmcp(SEXP burnSEXP, SEXP nsSEXP, SEXP XSEXP, SEXP alpha1SEXP, SEXP beta1SEXP, SEXP alpha2SEXP, SEXP beta2SEXP, SEXP aSEXP, SEXP dSEXP, SEXP mu0SEXP, SEXP s02SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< int >::type burn(burnSEXP);
    Rcpp::traits::input_parameter< int >::type ns(nsSEXP);
    Rcpp::traits::input_parameter< arma::rowvec >::type X(XSEXP);
    Rcpp::traits::input_parameter< double >::type alpha1(alpha1SEXP);
    Rcpp::traits::input_parameter< double >::type beta1(beta1SEXP);
    Rcpp::traits::input_parameter< double >::type alpha2(alpha2SEXP);
    Rcpp::traits::input_parameter< double >::type beta2(beta2SEXP);
    Rcpp::traits::input_parameter< double >::type a(aSEXP);
    Rcpp::traits::input_parameter< double >::type d(dSEXP);
    Rcpp::traits::input_parameter< double >::type mu0(mu0SEXP);
    Rcpp::traits::input_parameter< double >::type s02(s02SEXP);
    rcpp_result_gen = Rcpp::wrap(bmcp(burn, ns, X, alpha1, beta1, alpha2, beta2, a, d, mu0, s02));
    return rcpp_result_gen;
END_RCPP
}
// u_to_index
NumericMatrix u_to_index(NumericMatrix U);
RcppExport SEXP _bmcp_u_to_index(SEXP USEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericMatrix >::type U(USEXP);
    rcpp_result_gen = Rcpp::wrap(u_to_index(U));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_bmcp_bmcp", (DL_FUNC) &_bmcp_bmcp, 11},
    {"_bmcp_u_to_index", (DL_FUNC) &_bmcp_u_to_index, 1},
    {NULL, NULL, 0}
};

RcppExport void R_init_bmcp(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
